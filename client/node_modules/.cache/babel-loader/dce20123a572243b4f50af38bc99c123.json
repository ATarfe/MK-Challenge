{"ast":null,"code":"var _jsxFileName = \"/home/atarfe/Desktop/mk_challenge/src/components/UserForm.js\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport uuid from 'react-uuid';\nexport class UserForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: '',\n      name: '',\n      email: '',\n      message: ''\n    };\n\n    this.handleChange = input => e => {\n      this.setState({\n        [input]: e.target.value\n      });\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    fetch('https://dez880womj.execute-api.us-east-2.amazonaws.com/deploy1/gateway', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: uuid(),\n        name: this.state.name,\n        email: this.state.email,\n        message: this.state.message\n      })\n    }).then(response => {\n      if (response.ok) {\n        response.json().then(json => {});\n      } else {\n        response.json().then(json => {});\n      }\n    });\n  }\n\n  render() {\n    const {\n      name,\n      email,\n      message\n    } = this.state;\n    const values = {\n      name,\n      email,\n      message\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      position: \"static\",\n      style: {\n        marginBottom: \"100px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"MK Contact Form\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(ValidatorForm, {\n      ref: \"form\",\n      onSubmit: this.handleSubmit,\n      onError: errors => console.log(errors),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      label: \"Name\",\n      variant: \"outlined\",\n      onChange: this.handleChange('name'),\n      name: \"name\",\n      value: name,\n      validators: ['required'],\n      errorMessages: ['this field is required'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 24\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 30\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      label: \"Email\",\n      variant: \"outlined\",\n      onChange: this.handleChange('email'),\n      name: \"email\",\n      value: email,\n      validators: ['required', 'isEmail'],\n      errorMessages: ['this field is required', 'email is not valid'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      label: \"Message\",\n      variant: \"outlined\",\n      onChange: this.handleChange('message'),\n      name: \"message\",\n      value: message,\n      validators: ['required'],\n      errorMessages: ['this field is required'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, \"Submit\")));\n  }\n\n}\nexport default UserForm;","map":{"version":3,"sources":["/home/atarfe/Desktop/mk_challenge/src/components/UserForm.js"],"names":["React","Component","TextField","AppBar","Toolbar","Typography","Button","ValidatorForm","TextValidator","uuid","UserForm","constructor","state","id","name","email","message","handleChange","input","e","setState","target","value","handleSubmit","bind","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","ok","json","render","values","marginBottom","errors","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\nimport uuid from 'react-uuid';\n\n\nexport class UserForm extends Component {\n\n    constructor() {\n        super();\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    state = {\n        id:'',\n        name: '',\n        email: '',\n        message: ''\n    }\n\n    handleChange = input => e => {\n        this.setState({[input]: e.target.value});\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        fetch('https://dez880womj.execute-api.us-east-2.amazonaws.com/deploy1/gateway', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n              body: JSON.stringify({\n                id: uuid(),  \n                name: this.state.name,\n                email: this.state.email,\n                message: this.state.message\n              })\n            }).then(response => {\n                if (response.ok) {\n                    response.json().then(json => {\n                    });\n                }\n                else{\n                    response.json().then(json => {\n                    });\n                }\n            });\n    }\n \n    render() {\n        const { name, email, message } = this.state;\n        const values = { name, email, message };\n        return (\n            <div className=\"page\">\n                <AppBar position=\"static\" style={{marginBottom: \"100px\"}}>\n                    <Toolbar>\n                    <Typography variant=\"h5\">\n                       MK Contact Form\n                    </Typography>\n                    </Toolbar>  \n                </AppBar>\n                <br /><br />\n                \n                <ValidatorForm\n                    ref=\"form\"\n                    onSubmit={this.handleSubmit}\n                    onError={errors => console.log(errors)}\n                >\n                    <TextValidator\n                        label=\"Name\"\n                        variant=\"outlined\"\n                        onChange={this.handleChange('name')}\n                        name=\"name\"\n                        value={name}\n                        validators={['required']}\n                        errorMessages={['this field is required']}\n                    /> <br/> <br />\n                    <TextValidator\n                        label=\"Email\"\n                        variant=\"outlined\"\n                        onChange={this.handleChange('email')}\n                        name=\"email\"\n                        value={email}\n                        validators={['required', 'isEmail']}\n                        errorMessages={['this field is required', 'email is not valid']}\n                    />\n                    <br/> <br />\n                    <TextValidator\n                        label=\"Message\"\n                        variant=\"outlined\"\n                        onChange={this.handleChange('message')}\n                        name=\"message\"\n                        value={message}\n                        validators={['required']}\n                        errorMessages={['this field is required']}\n                    />\n                    <br/> <br />\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">Submit</Button>\n                </ValidatorForm>\n            </div>  \n        )\n    }\n}\n\nexport default UserForm\n"]},"metadata":{},"sourceType":"module"}